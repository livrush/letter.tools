{"version":3,"sources":["components/ActionBar.jsx","components/Button.jsx","components/ButtonGroup.jsx","components/Header.jsx","components/HomeLetter.jsx","components/VariableColumn.jsx","components/Input.jsx","components/Letter.jsx","pages/Home.jsx","pages/Letter.jsx","pages/List.jsx","App.jsx","serviceWorker.js","redux/constants.js","lib/instructions.js","redux/reducers.js","index.js"],"names":["ActionBar","className","config","icon","faEdit","faEye","faSave","faDownload","faFile","faEnvelope","Button","text","rest","IconComponent","TextComponent","protoTypes","PropTypes","node","string","defaultProps","ButtonGroup","map","i","key","iconName","Header","to","HomeLetter","user","disabled","VariableColumn","variableName","InputComponents","variableValue","push","variable","name","value","Input","placeholder","type","id","Letter","textarea","document","getElementsByClassName","addEventListener","event","target","style","height","scrollHeight","this","props","edit","letterText","editing","displaying","split","line","slice","React","Component","HomePage","LetterPage","letter","title","Salutation","Company","Position","Skill","content","ListPage","mapStateToProps","state","console","log","variables","App","path","exact","component","connect","href","rel","Boolean","window","location","hostname","match","UPDATE_VARIABLE","UPDATE_LETTER_TITLE","UPDATE_LETTER_CONTENT","EDIT_LETTER_CONTENT","VIEW_LETTER_CONTENT","instructions","reducers","combineReducers","action","payload","newVariableNames","reduce","result","newTitle","newContent","store","createStore","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6f53295.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  faDownload,\n  faEdit,\n  faEnvelope,\n  faEye,\n  faFile,\n  faSave,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ButtonGroup } from '.';\n\nexport const ActionBar = () => (\n  <div className=\"actionBar-container\">\n    <ButtonGroup\n      config={[\n        { icon: faEdit },\n        { icon: faEye },\n      ]}\n    />\n    <ButtonGroup\n      config={[\n        { icon: faSave },\n        { icon: faDownload },\n        { icon: faFile },\n        { icon: faEnvelope },\n      ]}\n    />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Button = ({ icon, text, ...rest }) => {\n  const IconComponent = icon ?\n    <FontAwesomeIcon className=\"button-icon\" icon={icon} /> :\n    null;\n\n  const TextComponent = text ?\n    <span className=\"button-text\">{text}</span> :\n    null;\n\n  return (\n  <button className=\"button\" {...rest} >\n    { IconComponent }\n    { TextComponent }\n  </button>\n)};\n\nButton.protoTypes = {\n  icon: PropTypes.node,\n  text: PropTypes.string,\n};\n\nButton.defaultProps = {\n  icon: null,\n  text: '',\n};\n\nexport { Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '.';\n\nconst ButtonGroup = ({ config }) => (\n  <div className=\"button-group\">\n    {\n      config.map(({ icon, text, ...rest }, i) => (\n        <Button key={icon.iconName + text} icon={icon} text={text} {...rest} />\n      ))\n    }\n  </div>\n);\n\nButtonGroup.propTypes = {\n  config: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.object,\n      text: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport { ButtonGroup };\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => (\n  <nav className=\"nav\">\n    <div className=\"container header\">\n      <Link to=\"/\">\n        <div className=\"logo title\">\n          letter.tools\n        </div>\n      </Link>\n      <div className=\"links\">\n        <Link to=\"letter\">Letter</Link>\n        <Link to=\"list\">List</Link>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '.';\n\nexport const HomeLetter = ({ user }) => (\n  <div className=\"home-letter\">\n    <div className=\"home-letter-top\">\n      <p className=\"home-letter-prefix-container title\">\n        <span className=\"home-letter-prefix t-black\">any</span>\n        <span className=\"home-letter-prefix t-green\">thank you</span>\n        <span className=\"home-letter-prefix t-red\">rejection</span>\n        <span className=\"home-letter-prefix t-yellow\">follow up</span>\n        <span className=\"home-letter-prefix t-blue\">cover</span>\n      </p>\n      <h1 className=\"home-letter-title title\">letter.tools</h1>\n    </div>\n    <div className=\"home-letter-links\">\n      <Link className=\"home-letter-link\" to=\"letter\">Start fresh</Link>\n      {\n        user ?\n        <Link className=\"home-letter-link\" to=\"list\">Continue</Link> :\n        <Button className=\"home-letter-link\" text=\"Continue\" disabled />\n      }\n    </div>\n  </div>\n)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '.';\n\nconst VariableColumn = ({ config }) => {\n  const InputComponents = [];\n  let variableName;\n\n  for (variableName in config) {\n    const variableValue = config[variableName]\n    InputComponents.push(<Input key={variableName} variable={{ name: variableName, value: variableValue }} />);\n  }\n\n  return (\n    <div className=\"injections-container\">\n      <h2 className=\"injections-title\">Injections</h2>\n      { InputComponents }\n    </div>\n  );\n};\n\nVariableColumn.propTypes = {\n  config: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport { VariableColumn };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ variable }) => (\n  <div className=\"input-container\">\n    <label className=\"input-label\">\n      {variable.name}\n    </label>\n    <input\n      className=\"input\"\n      placeholder={variable.name}\n      type=\"text\"\n      name={variable.name}\n      id={variable.name}\n    />\n  </div>\n);\n\nInput.propTypes = {\n  variable: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport { Input };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Letter extends React.Component {\n  static defaultProps = {\n    edit: true,\n  }\n\n  componentDidMount() {\n    const textarea = document\n      .getElementsByClassName('letter-textarea')[0];\n    textarea && textarea.addEventListener('keyup', function (event) {\n      event.target.style.height = event.target.scrollHeight + 'px';\n    }, false);\n  }\n\n  render() {\n    const {\n      edit,\n      letterText,\n    } = this.props;\n\n    const editing = (\n      <textarea className=\"letter-textarea\"\n        // value={letterText}\n      />\n    );\n\n    const displaying = (\n      <div className=\"letter-text\">\n        {letterText.split('\\n').map((line, i) => <p key={line.slice(0, 5) || `Empty-${i}`}>{line}</p>)}\n      </div>\n    );\n    return (\n      <div className=\"letter-container\">\n      { edit ? editing : displaying }\n    </div>\n    );\n  }\n};\n\nLetter.propTypes = {\n  edit: PropTypes.bool,\n  letterText: PropTypes.string.isRequired,\n};\n\nexport { Letter };\n","import React from 'react';\nimport { HomeLetter } from '../components';\n\nexport const HomePage = () => (\n  <div className=\"homePage-container\"><HomeLetter /></div>\n);\n","import React from 'react';\nimport { ActionBar, VariableColumn, Letter } from '../components';\n\nconst LetterPage = ({ letter }) => (\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <h2\n          className=\"letter-title\"\n          // contentEditable=\"true\"\n        >{letter.title}</h2>\n        <VariableColumn\n          config={{\n            Salutation: '',\n            Company: '',\n            Position: '',\n            Skill: '',\n          }}\n        />\n      </div>\n      <div className=\"col-8\">\n        <ActionBar />\n        <Letter\n          edit={letter.edit}\n          letterText={letter.content}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nLetterPage.propTypes = {};\n\nexport { LetterPage };\n","import React from 'react';\n\nexport const ListPage = () => {\n  return (<div>List</div>)\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage, LetterPage, ListPage, } from './pages';\nimport { Header } from './components';\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    letter: state.letter,\n    variables: state.variables,\n  };\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={null} />\n          <Route component={Header} />\n        </Switch>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/letter\" component={connect(mapStateToProps)(LetterPage)} />\n          <Route path=\"/list\" component={ListPage} />\n        </Switch>\n      </Router>\n      <footer className=\"footer\">\n        Built by&nbsp;\n        <a\n          href=\"http://pafiu.me\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Olivia Sabo-Rush\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// ! ////////////////////////////\n// ! Variables //////////////////\n// ! ////////////////////////////\n\nexport const UPDATE_VARIABLE = 'UPDATE_VARIABLE';\n\n// ! ////////////////////////////\n// ! Letter /////////////////////\n// ! ////////////////////////////\n\n// ? Title\n\nexport const UPDATE_LETTER_TITLE = 'UPDATE_LETTER_TITLE';\n\n// ? Content\n\nexport const UPDATE_LETTER_CONTENT = 'UPDATE_LETTER_CONTENT';\nexport const EDIT_LETTER_CONTENT = 'EDIT_LETTER_CONTENT';\nexport const VIEW_LETTER_CONTENT = 'VIEW_LETTER_CONTENT';\n","const instructions = `{{salutation}}\n\nWelcome to letter.tools! This site is dedicated to simplifying writing multiple letters with similar, but varying, content.\n\nAll you need to do is write up the letter you want, and set anything you want to be injected you should wrap in double curly braces, like this: {{variable}}\n\nOnce you set your variables they should show up in the left side column, and you can use the accompanying inputs to specify the value of each variable.\n\n{{regards}}`;\n\nexport { instructions };\n","import { combineReducers } from 'redux'\nimport {\n  UPDATE_VARIABLE,\n  UPDATE_LETTER_TITLE,\n  UPDATE_LETTER_CONTENT,\n  EDIT_LETTER_CONTENT,\n  VIEW_LETTER_CONTENT,\n} from './constants';\nimport { instructions } from '../lib';\n\n// ! ////////////////////////////\n// ! Variables //////////////////\n// ! ////////////////////////////\n\n// ? Variables\n// {\n//   name: 'value',\n//   ...\n// },\n\nfunction variablesReducer(variables = {}, action) {\n  switch(action.type) {\n    case UPDATE_LETTER_CONTENT:\n      // todo: make sure this is actually getting an array of names,\n      // todo: otherwise it will need to change\n      return action.payload.newVariableNames\n        .reduce((result, variableName) => {\n          result[variableName] = variables[variableName] || null;\n          return result;\n        }, {});\n    case UPDATE_VARIABLE:\n      return [ ...variables, ...action.payload ];\n    default:\n      return variables;\n  }\n}\n\n// ! ////////////////////////////\n// ! Letter /////////////////////\n// ! ////////////////////////////\n\n// ? Letter\n// {\n//   title: '',\n//   content: '',\n//   edit: '',\n// }\n\nfunction letterReducer(letter = {\n  edit: true,\n  title: 'Untitled Letter',\n  content: instructions,\n}, action) {\n  switch(action.type) {\n    case UPDATE_LETTER_TITLE:\n      return { ...letter, title: action.payload.newTitle };\n    case UPDATE_LETTER_CONTENT:\n      return { ...letter, content: action.payload.newContent };\n    case EDIT_LETTER_CONTENT:\n      return { ...letter, edit: true };\n    case VIEW_LETTER_CONTENT:\n      return { ...letter, edit: false };\n    default:\n      return letter;\n  }\n}\n\nconst reducers = combineReducers({\n  variables: variablesReducer,\n  letter: letterReducer,\n});\n\nexport default reducers;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducers from './redux/reducers';\n\nconst store = createStore(reducers);\n\nrender(\n  <Provider store={store}><App/></Provider>,\n  // <App/>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}